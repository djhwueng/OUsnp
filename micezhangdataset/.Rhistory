# setwd("~/Dropbox/FCU/Teaching/Mentoring/2017Spring/YiWeiHsu/Rcode/main.code/BMsnp")
setwd("~/Dropbox/YiWeiHsu/Rcode/main.code/BMsnp")
rm(list=ls())
# source("~/Dropbox/FCU/Teaching/Mentoring/2017Spring/YiWeiHsu/Rcode/main.code/DV_test.r")
source("~/Dropbox/YiWeiHsu/Rcode/main.code/DV_test.r")
# source("~/Dropbox/FCU/Teaching/Mentoring/2017Spring/YiWeiHsu/Rcode/main.code/DV_test.r")
source("~/Dropbox/YiWeiHsu/Rcode/main.code/DV_test.r")
# source("~/Dropbox/FCU/Teaching/Mentoring/2017Spring/YiWeiHsu/Rcode/main.code/sim.snp.tree.yg.r")
source("~/Dropbox/YiWeiHsu/Rcode/main.code/sim.snp.tree.yg.r")
LSS.bm<-function(k=k,trait=trait,V=V,D=D){
V.inv<-pseudoinverse(V)
mu.hat<-pseudoinverse(t(D)%*%V.inv%*%D)%*%t(D)%*%V.inv%*%trait
sigma.sq.hat<- t(trait - D%*%mu.hat)%*%V.inv%*%(trait - D%*%mu.hat)/n
NegLogML <- (n/2)*log(2*pi)+(1/2)*t(trait- D%*%mu.hat)%*%V.inv%*%(trait- D%*%mu.hat) + (1/2)*log(abs(det(V))) #natural log multivariate noraml PDF取log
loglik<- -NegLogML
lss<- 2*loglik-k*log(n)
return(lss)
}
permute.LSS.bm<- function(k,trait=trait,tree=tree,sims=sims){
lss.array<-array(0,c(sims))
for(sim.index in 1:sims){
#    print(sim.index)
permute.trait<-sample(trait)
permute.lss.bm <- LSS.bm(k,trait=permute.trait,tree=tree)
lss.array[sim.index]<-permute.lss.bm
}
return(lss.array)
}
#tree<-pbtree(n=5)#this is a sumulated tree
#plot(tree)
#nodelabels()
#trait<-rnorm(ntip) # this is a simulated trait
taxa.size<-10
seqlen<-1000
ouparams<-c(5,5,40,40,90,80,100)
names(ouparams)<-c("alp1","alp2","sig1","sig2","th0","th1","th2")
tree.trait<-sim.snp.tree.yg(taxa.size=taxa.size,seqlen=seqlen,ouparams=ouparams)
tree<-tree.trait$tree
par(mfrow=c(1,2))
plot(tree)
tree<-reorder(tree,"postorder")
nodelabels()
tree<-chronoMPL(tree)#we
plot(tree)
nodelabels()
tree$tip.label<-paste("t",tree$tip.label,sep="")
tree$tip.label
vcv.tree<-vcv(tree)
diag(vcv.tree)<-max(vcv.tree)
vcv.tree<-vcv.tree/max(vcv.tree)
tree<-vcv2phylo(vcv.tree)
plot(tree)
trait<-matrix(tree.trait$trait$X,ncol=1)
rownames(trait)<-tree.trait$trait$Genus_species
#tree<-pbtree(n=5)#this is a sumulated tree
#plot(tree)
#nodelabels()
#trait<-rnorm(ntip) # this is a simulated trait
taxa.size<-30
seqlen<-1000
ouparams<-c(5,5,40,40,90,80,100)
names(ouparams)<-c("alp1","alp2","sig1","sig2","th0","th1","th2")
tree.trait<-sim.snp.tree.yg(taxa.size=taxa.size,seqlen=seqlen,ouparams=ouparams)
tree<-tree.trait$tree
par(mfrow=c(1,2))
plot(tree)
tree<-reorder(tree,"postorder")
nodelabels()
tree<-chronoMPL(tree)#we
plot(tree)
nodelabels()
tree$tip.label<-paste("t",tree$tip.label,sep="")
tree$tip.label
vcv.tree<-vcv(tree)
diag(vcv.tree)<-max(vcv.tree)
vcv.tree<-vcv.tree/max(vcv.tree)
tree<-vcv2phylo(vcv.tree)
plot(tree)
trait<-matrix(tree.trait$trait$X,ncol=1)
rownames(trait)<-tree.trait$trait$Genus_species
k.array <- 3:8
for(kIndex in 1:length(k.array)){
k<-k.array[kIndex]
#    k<-3
DV.data<-DV(k=k,tree=tree)
V<-DV.data$V
D<-DV.data$D
print(dim(D)[2])
}
k
plot(tree)
#tree<-pbtree(n=5)#this is a sumulated tree
#plot(tree)
#nodelabels()
#trait<-rnorm(ntip) # this is a simulated trait
taxa.size<-30
seqlen<-1000
ouparams<-c(5,5,40,40,90,80,100)
names(ouparams)<-c("alp1","alp2","sig1","sig2","th0","th1","th2")
tree.trait<-sim.snp.tree.yg(taxa.size=taxa.size,seqlen=seqlen,ouparams=ouparams)
tree<-tree.trait$tree
par(mfrow=c(1,2))
plot(tree)
tree<-reorder(tree,"postorder")
nodelabels()
tree<-chronoMPL(tree)#we
plot(tree)
nodelabels()
tree$tip.label<-paste("t",tree$tip.label,sep="")
tree$tip.label
vcv.tree<-vcv(tree)
diag(vcv.tree)<-max(vcv.tree)
vcv.tree<-vcv.tree/max(vcv.tree)
tree<-vcv2phylo(vcv.tree)
plot(tree)
trait<-matrix(tree.trait$trait$X,ncol=1)
rownames(trait)<-tree.trait$trait$Genus_species
k<-3
DV.data<-DV(k=k,tree=tree)
k<-4
DV.data<-DV(k=k,tree=tree)
k<-4
DV.data<-DV(k=k,tree=tree)
#tree <-  sim.bd.taxa.age(n=size, numbsim=1, lambda=1, mu=1, frac = 0.5, age=1, mrca = TRUE)[[1]]
k
phy<-tree
phy<-reorder(tree, "postorder") #reorder(x, order = c("preorder", "postorder","caldewise","pruningwise"))
#plot(phy)
#nodelabels()
#tiplabels()
ntip<-length(phy$tip.label)
#this is for tree with one outgroup
Inode<- matrix(unique(c(phy$edge)[!(c(phy$edge) %in% (1:(ntip)))]),nrow=1)
Inode.length<-matrix(unique(c(nodeHeights(phy))[!(c(phy$edge) %in% (1:(ntip)))]),nrow=1)
Inode.length<-rbind(Inode,Inode.length)
Inode.length <- Inode.length[,order(Inode.length[2,])]
Inode.length #we have the info from the root tip to do cluster correctly
geo.phy<-extractTree(phy) #from phylobase
geo.phy
for(rootupindex in 1:k){
tip.num.set <- subset(geo.phy,node.subtree=Inode.length[1,rootupindex])@label
subtree.tip <- array(0,c(length(tip.num.set)))
for(sbt.index in 1:length(subtree.tip)){
subtree.tip[sbt.index]<-as.numeric(unlist(strsplit(tip.num.set[sbt.index],split="t"))[2]) #for rtree with label t1, t2, ...
}
assign(paste("I", Inode.length[1,rootupindex],sep=""),subtree.tip)
}#end for
rootupindex
tip.num.set
subset(geo.phy,node.subtree=Inode.length[1,rootupindex])@label
#rm(list=ls())
library(phytools)
library(phyclust)
library(ape)
library(phangorn)
library(corpcor)
library(phylobase)
library(TreeSim)
tip.num.set <- subset(geo.phy,node.subtree=Inode.length[1,rootupindex])@label
tip.num.set <- subset(geo.phy,node.subtree=Inode.length[1,rootupindex])@label
subset(geo.phy,node.subtree=Inode.length[1,rootupindex])@label
Inode.length
geo.phy
Inode.length[1,rootupindex]
node.subtree=Inode.length[1,rootupindex]
subset(geo.phy,node.subtree=Inode.length[1,rootupindex])
Inode.length[1,rootupindex])
typeof(Inode.length[1,rootupindex])
as.integer(Inode.length[1,rootupindex])
Inode.length
Inode
tip.num.set <- subset(geo.phy,node.subtree=Inode[1,rootupindex])@label
subtree.tip <- array(0,c(length(tip.num.set)))
for(sbt.index in 1:length(subtree.tip)){
subtree.tip[sbt.index]<-as.numeric(unlist(strsplit(tip.num.set[sbt.index],split="t"))[2]) #for rtree with label t1, t2, ...
}
assign(paste("I", Inode.length[1,rootupindex],sep=""),subtree.tip)
#tree <-  sim.bd.taxa.age(n=size, numbsim=1, lambda=1, mu=1, frac = 0.5, age=1, mrca = TRUE)[[1]]
k
phy<-tree
phy<-reorder(tree, "postorder") #reorder(x, order = c("preorder", "postorder","caldewise","pruningwise"))
#plot(phy)
#nodelabels()
#tiplabels()
ntip<-length(phy$tip.label)
#this is for tree with one outgroup
Inode<- matrix(unique(c(phy$edge)[!(c(phy$edge) %in% (1:(ntip)))]),nrow=1)
Inode.length<-matrix(unique(c(nodeHeights(phy))[!(c(phy$edge) %in% (1:(ntip)))]),nrow=1)
Inode.length<-rbind(Inode,Inode.length)
Inode.length <- Inode.length[,order(Inode.length[2,])]
#tree<-pbtree(n=5)#this is a sumulated tree
#plot(tree)
#nodelabels()
#trait<-rnorm(ntip) # this is a simulated trait
taxa.size<-30
seqlen<-1000
ouparams<-c(5,5,40,40,90,80,100)
names(ouparams)<-c("alp1","alp2","sig1","sig2","th0","th1","th2")
tree.trait<-sim.snp.tree.yg(taxa.size=taxa.size,seqlen=seqlen,ouparams=ouparams)
tree<-tree.trait$tree
par(mfrow=c(1,2))
plot(tree)
tree<-reorder(tree,"postorder")
nodelabels()
tree<-chronoMPL(tree)#we
plot(tree)
nodelabels()
tree$tip.label<-paste("t",tree$tip.label,sep="")
tree$tip.label
vcv.tree<-vcv(tree)
diag(vcv.tree)<-max(vcv.tree)
vcv.tree<-vcv.tree/max(vcv.tree)
tree<-vcv2phylo(vcv.tree)
plot(tree)
trait<-matrix(tree.trait$trait$X,ncol=1)
rownames(trait)<-tree.trait$trait$Genus_species
k<-4
DV.data<-DV(k=k,tree=tree)
tree
phy<-reorder(tree, "postorder") #reorder(x, order = c("preorder", "postorder","caldewise","pruningwise"))
ntip<-length(phy$tip.label)
#this is for tree with one outgroup
Inode<- matrix(unique(c(phy$edge)[!(c(phy$edge) %in% (1:(ntip)))]),nrow=1)
Inode.length<-matrix(unique(c(nodeHeights(phy))[!(c(phy$edge) %in% (1:(ntip)))]),nrow=1)
Inode
Inode.length<-rbind(Inode,Inode.length)
Inode.length
Inode
system("pwd")
setwd("~/Dropbox/YiWeiHsu/Rcode/main.code/micezhangdataset")
snp<-read.csv("snps.dat.collapsed.csv" , header = T)
head(snp)
snp$chr
snp$chr1
snp$chr[chr1]
snp[,1]
snp[,1]==chr1
